{"data":{"projects":{"edges":[{"node":{"frontmatter":{"title":"trie_rcv","tech":["Rust"],"github":"https://github.com/milselarch/trie_rcv","external":"https://crates.io/crates/trie_rcv"},"html":"<p>Ranked Choice Voting algorithm implementations\nusing Tries. Ranked choice algorithm variations implemented\nthus far are Instant Runoff Voting (IRV), IRV with\n<a href=\"https://en.wikipedia.org/wiki/Borda_count\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">dowdall scoring</a> as a tie-breaker,\nranked pairs, and a <a href=\"https://en.wikipedia.org/wiki/Condorcet_winner_criterion\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">condorcet compliant</a>\nvariant of Ranked Pairs.</p>"}},{"node":{"frontmatter":{"title":"Autolooper","tech":["C",".wav"],"github":"https://github.com/milselarch/autolooper","external":""},"html":"<p>Autolooper is a simple CLI tool that allows users to extend audio in\n.wav music files by identifying and looping audio sections that are similar\nenough to be repeated seamlessly.</p>\n<p>The .wav file parser, output .wav file writer,\nand audio similarity detection algorithms were all implemented from scratch in C.</p>"}},{"node":{"frontmatter":{"title":"SilentSpeak","tech":["Python","PyTorch","cv2"],"github":"https://huggingface.co/SilentSpeak/torchnet","external":""},"html":"<p>SilentSpeak is a lip-reading to speech translation model that takes\nadvantage of CNNs+RNNs for melspectrogram-to-phonemes translation, and a\ntransformer architecture for phonemes-to-speech translation.</p>"}},{"node":{"frontmatter":{"title":"Murder Mansion","tech":["Unity","C#","UI Toolkit","USS"],"github":"https://github.com/50033-game-design-and-development/50033-final-project-git-gud-games","external":"https://alian713.itch.io/murder-mansion"},"html":"<p>Murder Mansion is a 3D, single-player, puzzle game with a horror-themed escape\nroom setting created in C# using the Unity game engine, and was featured in the SUTD ISTD\nOpen House 2024 project showcase</p>\n<p><img src=\"https://img.itch.zone/aW1hZ2UvMjQxMTQ0NC8xNDI3MzQ1Ni5wbmc=/347x500/6gt3hI.png\" alt=\"scene\"></p>"}},{"node":{"frontmatter":{"title":"VeriFake","tech":["Python","FastAPI","PyTorch","cv2","AWS SageMaker","React","TypeScript"],"github":"","external":""},"html":"<p>VeriFake is a comprehensive deepfake detection system for images and\nvideos, created as part of a final-year project with <a href=\"https://www.htx.gov.sg/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">HTX</a>.</p>\n<p>Users would upload a video or image through a webapp, which would then be\nforwarded to <a href=\"https://aws.amazon.com/sagemaker/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">AWS SageMaker</a>\ninstances, where our custom deepfake detection\nmodels would analyze the media and predict on whether the media\nin question was a deepfake, as well identify the image regions that\ncontribute the most to the model's predictions.</p>"}},{"node":{"frontmatter":{"title":"ScanCart","tech":["Android","Java","Firestore","NFC"],"github":"https://github.com/milselarch/scancart","external":""},"html":"<p>ScanCart is an app that utilises the “tap-and-go” capability of\nNear Field Communication (NFC) in smartphones to allow elderly to obtain their\ngroceries conveniently and monitor their nutritional intake based on their\nhealth profiles.</p>\n<p>Created as part of the 1D project for the 50.004\n(information systems) module.</p>"}},{"node":{"frontmatter":{"title":"Raiders of Hanoi","tech":["FPGA","Lucid","Python"],"github":"https://github.com/50033-game-design-and-development/50033-final-project-git-gud-games","external":"https://alian713.itch.io/murder-mansion"},"html":"<p>Raiders of hanoi is a 2D arcade game where the player has to move around using the\njoystick, to pick up disks and drop them onto the towers to solve\nthe 4-disk towers of hanoi while avoiding the enemies that would spawn from\nthe right edge and move left to attack the player.</p>\n<p>Implemented in <a href=\"https://learn.sparkfun.com/tutorials/programming-an-fpga/lucid\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">lucid</a>\nas a state machine running on the <a href=\"https://alchitry.com/boards/au/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Alcitry AU</a>\nFPGA that selects inputs to a single 16-bit ALU as part of the 50.002 1D\nproject requirements.</p>"}},{"node":{"frontmatter":{"title":"10.014","tech":["Python","GrassHopper","Rhino"],"github":"https://github.com/milselarch/10-014","external":""},"html":"<p>2D and 3D art created as part of 10.014 computational design assignments done\nusing <a href=\"https://www.rhino3d.com/learn/?query=kind:%20grasshopper&#x26;modal=null\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">rhino</a> + python</p>\n<p><img src=\"https://raw.githubusercontent.com/milselarch/10-014/refs/heads/master/assignment-3/cover.jpg\" alt=\"mars_image\"></p>"}},{"node":{"frontmatter":{"title":"smart-bicycle-lock","tech":["Android","Java","C","NodeMCU","PIC microcontroller","Bluetooth"],"github":"https://github.com/milselarch/smart-bicycle-lock","external":""},"html":"<p>A bluetooth operated bicycle lock that can be controlled via an Android app written in java.\nThe firmware for the lock itself is written in C, with implementations for both\nPIC and ESP8266 microcontrollers. A custom length-prefix message protocol was implemented\nto allow for communication between the lock and the app over bluetooth.</p>"}}]}}}