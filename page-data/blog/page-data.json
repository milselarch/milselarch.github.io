{"componentChunkName":"component---src-pages-blog-index-tsx","path":"/blog/","result":{"data":{"allMarkdownRemark":{"edges":[{"node":{"frontmatter":{"title":"--C","description":"Design goals and plans for my C-to-CA compiler","slug":"/blog/mmc-design-decisions/","date":"2025-10-13T00:00:00.000Z","tags":["Compilers","CellularAutomata"],"draft":false,"edgy":null},"html":"<p><a href=\"https://github.com/milselarch/--C\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">https://github.com/milselarch/--C</a><br>\n(A WIP as of Oct 2025)</p>\n<p>So my goal with this project is to create a compiler from a source programming language\nto a 1D cellular automata. The primary reason for this is that I think it's possible\nto develop tools to analyze the halt-ability of some classes of programs\nwhen expressed in this form. But I also have personal reasons to want to do this:</p>\n<ol>\n<li>\n<p>to be entirely honestly I've always\nthought that writing a compiler sounds cool and wanted an excuse to\nget into an endeavor as massive as this one</p>\n</li>\n<li>\n<p>I did take a compilers course back in uni, but it always felt incomplete\nin the sense that although we had lessons on the different stages of a\ncompiler as well as a few labs on lexing and parsing,\nwe never actually got around to make a full-fledged compiler.</p>\n<p>Given how stretched thin I was with job search and final year project woes\nthis was objectively a good thing, but now that I have the free time, this\nis something I definitely want to get back into.</p>\n</li>\n</ol>\n<h2>On the Choice of Programming Language</h2>\n<p>So the source programming language could <em>theoretically</em> be anything, but\nthere a couple of requirements I have in mind in practice:</p>\n<ol>\n<li>\n<p>Its gotta be a small programming language<br>\nlanguages like lua and C are relatively small and self-contained, so\nit's possible to make write a compiler / interpreter as a one-man show kinda deal.\nC++ / Rust on the other hand is pretty impractical tackle solo.</p>\n</li>\n<li>\n<p>Its gotta be performant<br>\nThe performance overhead of executing a program after compiling it\ninto a cellular automata is going to be massive no matter what -\nbut a language that:</p>\n<ul>\n<li>is designed to be compiled down to hardware instructions\n(as opposed to being converted to bytecode and executed on a VM\nwith all the associated overheads that that entails)</li>\n<li>has static as opposed to dynamic typing\n(so we don't waste time doing type inference at runtime)\n<br/>\nwould be ideal. Languages like Python and JavaScript and lua\ndon't fit these criteria, while C / C++ / Rust\n(zero-cost abstractions as they like to say) does</li>\n</ul>\n</li>\n</ol>\n<p>I've given the punchline away in the title, but yes, the language\nI've chosen is C - its small and would lend itself well to being translated\ninto cellular automata instructions without too much unnecessary simulation overhead.</p>\n<p>I'm going through Nora Sanders' <a href=\"https://nostarch.com/writing-c-compiler\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Let's Build a C Compiler</a>\nbook to incrementally build up the compiler along the well-trodden path\nof source code -> x86 assembly instructions, but will</p>"}},{"node":{"frontmatter":{"title":"Abominable Intelligence","description":"Generative AI is antithetical to life itself","slug":"/blog/abominable-intelligence/","date":"2025-10-12T00:00:00.000Z","tags":["Politics"],"draft":false,"edgy":true},"html":"<p><em>What is AI?</em>\nAI is the fitting of a mathematical equation to a bunch of numerical data points,\nso that you can create an statistical representation of said data points.</p>\n<p><em>What is the purpose of all this?</em><br>\nWell the idea is that If we get a new data point we can plug it into the equation\nand use the interpolated value as a prediction. An example:</p>\n<ul>\n<li>If we had a dataset with numbers representing the cloudiness of the sky\nand the amount of rainfall each day for every day in the past year, we could try to\nfit an equation to that data and then interpolate the amount of rainfall that\ncould be expected for today given the number(s) representing how cloudy today is.<br>\n[TODO: linear regression diagram]</li>\n</ul>\n<p>So far so good, predicting stuff sounds innocuous enough -</p>\n<p><em>So what causes AI to become abominable?</em>\n<em><a href=\"https://www.britannica.com/technology/technology\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Technology is the application of scientific knowledge to the practical aims of human life</a></em></p>\n<p>When we run an AI model to predict the weather or figure out whether a picture\nis that of a cat or a dog, that's work that no one really cares about.\nIt’s grunt work - the less of it we have to do to get the outcome we want the\nhappier we’d be.</p>\n<p>Contrast this with the activities that we partake in that we value intrinsically -\ntaking a walk in the park, hanging out with friends, <em>creating art</em> - If an AI could\nautomagically make a poem to express whatever it is you wanted to express, would you\nreally prefer that outcome to your own expression?</p>\n<p>And this is where we get Abominable Intelligence.<br>\nInstead of a world where AI menial soul-crushing tasks like figuring out\nwhether some shitty low-res image is a bicycle or a cat while people create art,\nwe have a world where people pay generative AI to plagiarize other people's art\nwhile waves of human wage slaves slog away classifying text and images for\n<a href=\"https://time.com/6247678/openai-chatgpt-kenya-workers/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">$2 an hour in digital sweatshops</a>.</p>\n<h2>AI Art is Theft</h2>\n<p>The output of every AI model is some combination of multiplication (weights),\naddition (biases, linear combinations of inputs), line bending (RELU activation etc.),\nand aggregation (e.g. taking the maximum value of a group if pixels in a max-pooling layer).</p>\n<p>With generative AI models, we have a system that does math to make a\nstatistical aggregation of the input text / images / audio, and spits out random\nsamples of this statistical aggregation soup to create your generative AI image\nor whatever. We know it's all just math, so any creativity has to come from the input.\nOr more precisely, generative AI is literally just remixing the input data in a way\nthat looks good.</p>\n<p>We know none of these fucking AI companies give two shits about sourcing their data\nfrom sources that are okay with being trained on and / or compensate the sources\nfairly, it has become a plagiarism machine for generative AI companies.</p>"}}]}},"pageContext":{}},"staticQueryHashes":["2031412112","2709483142","3539500889","3825832676"],"slicesMap":{}}